
buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.9.1'
        classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.2"
    }
}

plugins {
    // Provide convenience executables for trying out the examples.
    id 'application'
    id 'java'
    id 'jacoco'
    // ASSUMES GRADLE 5.6 OR HIGHER. Use plugin version 0.8.10 with earlier gradle versions
    id 'com.google.protobuf' version '0.8.12'
    // Generate IntelliJ IDEA's .idea & .iml project files
    id 'idea'
}

repositories {
    maven { // The google mirror is less flaky than mavenCentral()
        url "https://maven-central.storage-download.googleapis.com/maven2/" }
    mavenCentral()
    mavenLocal()
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// IMPORTANT: You probably want the non-SNAPSHOT version of gRPC. Make sure you
// are looking at a tagged version of the example and not "master"!

// Feel free to delete the comment at the next line. It is just for safely
// updating the version in our release process.
def grpcVersion = '1.52.1' // CURRENT_GRPC_VERSION
def protobufVersion = '3.21.12'
def protocVersion = protobufVersion

dependencies {
    implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
    // examples/advanced need this for JsonFormat
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"

    implementation group: 'net.jcip', name: 'jcip-annotations', version: '1.0'

    implementation "io.grpc:grpc-netty:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"


    implementation group: 'com.google.api.grpc', name: 'googleapis-common-protos', version: '0.0.3'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.11'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'


    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:4.11.0'
}


protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

startScripts.enabled = false


task helloWorldServer(type: CreateStartScripts) {
    mainClass = 'io.grpc.examples.helloworld.HelloWorldServer'
    applicationName = 'server'
    classpath = startScripts.classpath
    outputDir = new File(project.buildDir, 'tmp/scripts/' + name)

    defaultJvmOpts = ['-XX:+UseG1GC']
}

task helloWorldClient(type: CreateStartScripts) {
    mainClass =  'io.grpc.examples.helloworld.HelloWorldClient'
    applicationName = 'client'
    classpath = startScripts.classpath
    outputDir = new File(project.buildDir, 'tmp/scripts/' + name)
    defaultJvmOpts = ['-XX:+UseG1GC']
}

configurations.all {
    resolutionStrategy {
        force group: 'com.google.guava', name: 'guava', version: '30.1-jre'
    }
}


applicationDistribution.into('bin') {

    from(helloWorldServer)
    from(helloWorldClient)
    fileMode = 0755
}