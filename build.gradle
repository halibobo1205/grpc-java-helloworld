
plugins {
    // Provide convenience executables for trying out the examples.
    id 'application'
    id 'java'
    id 'jacoco'
    // ASSUMES GRADLE 5.6 OR HIGHER. Use plugin version 0.8.10 with earlier gradle versions
    id 'com.google.protobuf' version '0.9.3'
    // Generate IntelliJ IDEA's .idea & .iml project files
    id 'idea'
}

repositories {
    maven { // The google mirror is less flaky than mavenCentral()
        url "https://maven-central.storage-download.googleapis.com/maven2/" }
    mavenCentral()
    mavenLocal()
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// IMPORTANT: You probably want the non-SNAPSHOT version of gRPC. Make sure you
// are looking at a tagged version of the example and not "master"!

// Feel free to delete the comment at the next line. It is just for safely
// updating the version in our release process.
def grpcVersion = '1.53.0' // CURRENT_GRPC_VERSION
def protobufVersion = '3.22.2'
def protocVersion = protobufVersion
def lombokVersion = '1.18.24'
def logbackVersion = '1.2.11'
def junitVersion = '4.13.2'


dependencies {
    implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"

    implementation "io.grpc:grpc-netty:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-services:${grpcVersion}"

    implementation group: 'com.google.api.grpc', name: 'proto-google-common-protos', version: '2.21.0'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: "${logbackVersion}"
    implementation group: 'net.jcip', name: 'jcip-annotations', version: '1.0'

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
    testImplementation "junit:junit:${junitVersion}"
}


protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

startScripts.enabled = false


task helloWorldServer(type: CreateStartScripts) {
    mainClass = 'io.grpc.examples.helloworld.HelloWorldServer'
    applicationName = 'server'
    classpath = startScripts.classpath
    outputDir = new File(project.buildDir, 'tmp/scripts/' + name)

    defaultJvmOpts = ['-XX:+UseG1GC']
}

task helloWorldClient(type: CreateStartScripts) {
    mainClass =  'io.grpc.examples.helloworld.HelloWorldClient'
    applicationName = 'client'
    classpath = startScripts.classpath
    outputDir = new File(project.buildDir, 'tmp/scripts/' + name)
    defaultJvmOpts = ['-XX:+UseG1GC']
}

configurations.all {
    resolutionStrategy {
        force group: 'com.google.guava', name: 'guava', version: '30.1-jre'
    }
}


applicationDistribution.into('bin') {

    from(helloWorldServer)
    from(helloWorldClient)
    fileMode = 0755
}